package builtin

import (
	"github.com/stretchr/testify/assert"
	"github.com/wylu1037/lattice-go/common/convert"
	"testing"
)

func TestCredibilityContract_Write(t *testing.T) {
	contract := NewCredibilityContract()
	addr, _ := convert.ZltcToAddress("zltc_YBomBNykwMqxm719giBL3VtYV4ABT9a8D")
	data, err := contract.Write(&WriteLedgerRequest{
		ProtocolUri: 8589934595,
		Hash:        "1",
		Data:        convert.BytesToBytes32Arr([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
		Address:     addr,
	})
	assert.NoError(t, err)
	expectData := "0x4131ff530000000000000000000000000000000000000000000000000000000200000003000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000561717f7922a233720ae38acaa4174cda0bf17660000000000000000000000000000000000000000000000000000000000000001310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010102030405060708000000000000000000000000000000000000000000000000"
	assert.Equal(t, expectData, data)
}

func TestCredibilityContract_BatchWrite(t *testing.T) {
	contract := NewCredibilityContract()
	addr, _ := convert.ZltcToAddress("zltc_YBomBNykwMqxm719giBL3VtYV4ABT9a8D")
	batchRequest := make([]WriteLedgerRequest, 1)
	batchRequest[0] = WriteLedgerRequest{
		ProtocolUri: 8589934595,
		Hash:        "1",
		Data:        convert.BytesToBytes32Arr([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
		Address:     addr,
	}
	data, err := contract.BatchWrite(batchRequest)
	assert.NoError(t, err)
	expectData := "0x77b34b730000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000200000003000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000561717f7922a233720ae38acaa4174cda0bf17660000000000000000000000000000000000000000000000000000000000000001310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010102030405060708000000000000000000000000000000000000000000000000"
	assert.Equal(t, expectData, data)
}
